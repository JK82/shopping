import type { LoadedClerk } from '@clerk/types';
import React from 'react';
import IsomorphicClerk from '../isomorphicClerk';
declare type IsomorphicClerkContextValue = {
    value: IsomorphicClerk;
};
export declare const IsomorphicClerkContext: React.Context<IsomorphicClerkContextValue | undefined>;
export declare const useClerk: () => LoadedClerk;
export declare const withClerk: <P extends {
    clerk: LoadedClerk;
}>(Component: React.ComponentType<P>, displayName?: string | undefined) => {
    (props: Omit<P, "clerk">): JSX.Element | null;
    displayName: string;
};
export declare const WithClerk: React.FC<{
    children: (clerk: LoadedClerk) => React.ReactNode;
}>;
export {};
//# sourceMappingURL=IsomorphicClerkContext.d.ts.map