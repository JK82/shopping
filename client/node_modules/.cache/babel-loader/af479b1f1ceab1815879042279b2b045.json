{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WithClerk = exports.withClerk = exports.useClerk = exports.IsomorphicClerkContext = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst react_1 = (0, tslib_1.__importStar)(require(\"react\"));\n\nconst StructureContext_1 = require(\"../contexts/StructureContext\");\n\nconst errors_1 = require(\"../errors\");\n\nconst utils_1 = require(\"../utils\");\n\nconst assertHelpers_1 = require(\"./assertHelpers\");\n\nexports.IsomorphicClerkContext = react_1.default.createContext(undefined);\nexports.IsomorphicClerkContext.displayName = 'IsomorphicClerkContext';\n\nconst useClerk = () => {\n  const structureCtx = (0, react_1.useContext)(StructureContext_1.StructureContext);\n  const clerkCtx = (0, react_1.useContext)(exports.IsomorphicClerkContext);\n  (0, assertHelpers_1.assertWrappedByClerkProvider)(structureCtx);\n  (0, assertHelpers_1.assertWrappedByClerkProvider)(clerkCtx);\n  (0, assertHelpers_1.assertClerkLoadedGuarantee)(structureCtx.guaranteedLoaded, 'useClerk()');\n  (0, assertHelpers_1.assertClerkLoadedGuarantee)(clerkCtx.value, 'useClerk()'); //  The value is an instance of IsomorphicClerk, not Clerk\n  // TODO: Remove type cast\n\n  return clerkCtx.value;\n};\n\nexports.useClerk = useClerk;\n\nconst withClerk = (Component, displayName) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n\n  const HOC = props => {\n    const structureCtx = (0, react_1.useContext)(StructureContext_1.StructureContext);\n    const clerkCtx = (0, react_1.useContext)(exports.IsomorphicClerkContext);\n\n    if (!(0, utils_1.inBrowser)()) {\n      return null;\n    }\n\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(structureCtx);\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(clerkCtx);\n    const clerk = clerkCtx.value;\n\n    if (!clerk) {\n      return null;\n    }\n\n    if (structureCtx.guaranteedLoaded) {\n      return react_1.default.createElement(Component, Object.assign({}, props, {\n        clerk: clerk\n      }));\n    }\n\n    if (clerk.client) {\n      return react_1.default.createElement(StructureContext_1.StructureContext.Provider, {\n        value: StructureContext_1.StructureContextStates.guaranteedLoaded\n      }, react_1.default.createElement(Component, Object.assign({}, props, {\n        clerk: clerk\n      })));\n    }\n\n    return null;\n  };\n\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexports.withClerk = withClerk;\n\nconst WithClerk = _ref => {\n  let {\n    children\n  } = _ref;\n  return react_1.default.createElement(StructureContext_1.StructureContext.Consumer, null, structureCtx => react_1.default.createElement(exports.IsomorphicClerkContext.Consumer, null, clerkCtx => {\n    if (typeof children !== 'function') {\n      throw new Error(errors_1.hocChildrenNotAFunctionError);\n    }\n\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(structureCtx);\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(clerkCtx);\n    const clerk = clerkCtx.value;\n\n    if (!clerk) {\n      return null;\n    }\n\n    if (structureCtx.guaranteedLoaded) {\n      return children(clerk);\n    }\n\n    if (clerk.client) {\n      return react_1.default.createElement(StructureContext_1.StructureContext.Provider, {\n        value: StructureContext_1.StructureContextStates.guaranteedLoaded\n      }, children(clerk));\n    }\n\n    return null;\n  }));\n};\n\nexports.WithClerk = WithClerk;","map":{"version":3,"mappings":";;;;;;;;;AACA;;AAEA;;AAIA;;AAEA;;AACA;;AAQaA,iCAAyBC,gBAAMC,aAAN,CAEpCC,SAFoC,CAAzB;AAGbH,+BAAuBI,WAAvB,GAAqC,wBAArC;;AAEO,MAAMC,QAAQ,GAAG,MAAkB;AACxC,QAAMC,YAAY,GAAG,wBAAWC,mCAAX,CAArB;AACA,QAAMC,QAAQ,GAAG,wBAAWR,8BAAX,CAAjB;AACA,oDAA6BM,YAA7B;AACA,oDAA6BE,QAA7B;AACA,kDAA2BF,YAAY,CAACG,gBAAxC,EAA0D,YAA1D;AACA,kDAA2BD,QAAQ,CAACE,KAApC,EAA2C,YAA3C,EANwC,CAOxC;AACA;;AACA,SAAQF,QAAQ,CAACE,KAAjB;AACD,CAVM;;AAAMV,mBAAQK,QAAR;;AAYN,MAAMM,SAAS,GAAG,CACvBC,SADuB,EAEvBR,WAFuB,KAGrB;AACFA,aAAW,GACTA,WAAW,IAAIQ,SAAS,CAACR,WAAzB,IAAwCQ,SAAS,CAACC,IAAlD,IAA0D,WAD5D;AAEAD,WAAS,CAACR,WAAV,GAAwBA,WAAxB;;AACA,QAAMU,GAAG,GAAIC,KAAD,IAA4B;AACtC,UAAMT,YAAY,GAAG,wBAAWC,mCAAX,CAArB;AACA,UAAMC,QAAQ,GAAG,wBAAWR,8BAAX,CAAjB;;AAEA,QAAI,CAAC,wBAAL,EAAkB;AAChB,aAAO,IAAP;AACD;;AAED,sDAA6BM,YAA7B;AACA,sDAA6BE,QAA7B;AAEA,UAAMQ,KAAK,GAAIR,QAAQ,CAACE,KAAxB;;AACA,QAAI,CAACM,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAIV,YAAY,CAACG,gBAAjB,EAAmC;AACjC,aAAOR,8BAACW,SAAD,EAAUK,kBAAMF,KAAN,EAAiB;AAAEC,aAAK,EAAEA;AAAT,OAAjB,CAAV,CAAP;AACD;;AAED,QAAIA,KAAK,CAACE,MAAV,EAAkB;AAChB,aACEjB,8BAACM,oCAAiBY,QAAlB,EAA0B;AACxBT,aAAK,EAAEH,0CAAuBE;AADN,OAA1B,EAGER,8BAACW,SAAD,EAAUK,kBAAMF,KAAN,EAAiB;AAAEC,aAAK,EAAEA;AAAT,OAAjB,CAAV,CAHF,CADF;AAOD;;AAED,WAAO,IAAP;AACD,GA/BD;;AAgCAF,KAAG,CAACV,WAAJ,GAAkB,aAAaA,WAAW,GAA1C;AACA,SAAOU,GAAP;AACD,CAzCM;;AAAMd,oBAASW,SAAT;;AA2CN,MAAMS,SAAS,GAEjB;AAAA,MAAC;AAAEC;AAAF,GAAD;AAAA,SACHpB,8BAACM,oCAAiBe,QAAlB,EAA0B,IAA1B,EACGhB,YAAY,IACXL,8BAACD,+BAAuBsB,QAAxB,EAAgC,IAAhC,EACGd,QAAQ,IAAG;AACV,QAAI,OAAOa,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAM,IAAIE,KAAJ,CAAUC,qCAAV,CAAN;AACD;;AAED,sDAA6BlB,YAA7B;AACA,sDAA6BE,QAA7B;AAEA,UAAMQ,KAAK,GAAIR,QAAQ,CAACE,KAAxB;;AACA,QAAI,CAACM,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAIV,YAAY,CAACG,gBAAjB,EAAmC;AACjC,aAAOY,QAAQ,CAACL,KAAD,CAAf;AACD;;AAED,QAAIA,KAAK,CAACE,MAAV,EAAkB;AAChB,aACEjB,8BAACM,oCAAiBY,QAAlB,EAA0B;AACxBT,aAAK,EAAEH,0CAAuBE;AADN,OAA1B,EAGGY,QAAQ,CAACL,KAAD,CAHX,CADF;AAOD;;AAED,WAAO,IAAP;AACD,GA7BH,CAFJ,CADG;AAAA,CAFE;;AAAMhB,oBAASoB,SAAT","names":["exports","react_1","createContext","undefined","displayName","useClerk","structureCtx","StructureContext_1","clerkCtx","guaranteedLoaded","value","withClerk","Component","name","HOC","props","clerk","Object","client","Provider","WithClerk","children","Consumer","Error","errors_1"],"sources":["/Users/johnkeane/keanelabs/shopping-list/client/node_modules/@clerk/clerk-react/src/contexts/IsomorphicClerkContext.tsx"],"sourcesContent":["import type { LoadedClerk } from '@clerk/types';\nimport React, { useContext } from 'react';\n\nimport {\n  StructureContext,\n  StructureContextStates,\n} from '../contexts/StructureContext';\nimport { hocChildrenNotAFunctionError } from '../errors';\nimport IsomorphicClerk from '../isomorphicClerk';\nimport { inBrowser } from '../utils';\nimport {\n  assertClerkLoadedGuarantee,\n  assertWrappedByClerkProvider,\n} from './assertHelpers';\n\ntype IsomorphicClerkContextValue = {\n  value: IsomorphicClerk;\n};\nexport const IsomorphicClerkContext = React.createContext<\n  IsomorphicClerkContextValue | undefined\n>(undefined);\nIsomorphicClerkContext.displayName = 'IsomorphicClerkContext';\n\nexport const useClerk = (): LoadedClerk => {\n  const structureCtx = useContext(StructureContext);\n  const clerkCtx = useContext(IsomorphicClerkContext);\n  assertWrappedByClerkProvider(structureCtx);\n  assertWrappedByClerkProvider(clerkCtx);\n  assertClerkLoadedGuarantee(structureCtx.guaranteedLoaded, 'useClerk()');\n  assertClerkLoadedGuarantee(clerkCtx.value, 'useClerk()');\n  //  The value is an instance of IsomorphicClerk, not Clerk\n  // TODO: Remove type cast\n  return (clerkCtx.value as unknown) as LoadedClerk;\n};\n\nexport const withClerk = <P extends { clerk: LoadedClerk }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName =\n    displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC = (props: Omit<P, 'clerk'>) => {\n    const structureCtx = useContext(StructureContext);\n    const clerkCtx = useContext(IsomorphicClerkContext);\n\n    if (!inBrowser()) {\n      return null;\n    }\n\n    assertWrappedByClerkProvider(structureCtx);\n    assertWrappedByClerkProvider(clerkCtx);\n\n    const clerk = (clerkCtx.value as unknown) as LoadedClerk;\n    if (!clerk) {\n      return null;\n    }\n\n    if (structureCtx.guaranteedLoaded) {\n      return <Component {...(props as P)} clerk={clerk} />;\n    }\n\n    if (clerk.client) {\n      return (\n        <StructureContext.Provider\n          value={StructureContextStates.guaranteedLoaded}\n        >\n          <Component {...(props as P)} clerk={clerk} />\n        </StructureContext.Provider>\n      );\n    }\n\n    return null;\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexport const WithClerk: React.FC<{\n  children: (clerk: LoadedClerk) => React.ReactNode;\n}> = ({ children }) => (\n  <StructureContext.Consumer>\n    {structureCtx => (\n      <IsomorphicClerkContext.Consumer>\n        {clerkCtx => {\n          if (typeof children !== 'function') {\n            throw new Error(hocChildrenNotAFunctionError);\n          }\n\n          assertWrappedByClerkProvider(structureCtx);\n          assertWrappedByClerkProvider(clerkCtx);\n\n          const clerk = (clerkCtx.value as unknown) as LoadedClerk;\n          if (!clerk) {\n            return null;\n          }\n\n          if (structureCtx.guaranteedLoaded) {\n            return children(clerk);\n          }\n\n          if (clerk.client) {\n            return (\n              <StructureContext.Provider\n                value={StructureContextStates.guaranteedLoaded}\n              >\n                {children(clerk)}\n              </StructureContext.Provider>\n            );\n          }\n\n          return null;\n        }}\n      </IsomorphicClerkContext.Consumer>\n    )}\n  </StructureContext.Consumer>\n);\n"]},"metadata":{},"sourceType":"script"}