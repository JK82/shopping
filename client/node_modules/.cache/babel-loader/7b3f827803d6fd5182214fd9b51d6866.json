{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserButton = exports.UserProfile = exports.SignUp = exports.SignIn = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\n\nconst contexts_1 = require(\"../contexts\"); // README: <Portal/> should be a class pure component in order for mount and unmount\n// lifecycle props to be invoked correctly. Replacing the class component with a\n// functional component wrapped with a React.memo is not identical to the original\n// class implementation due to React intricacies such as the useEffect’s cleanup\n// seems to run AFTER unmount, while componentWillUnmount runs BEFORE.\n// More information can be found at https://clerkinc.slack.com/archives/C015S0BGH8R/p1624891993016300\n// The function Portal implementation is commented out for future reference.\n// const Portal = React.memo(({ props, mount, unmount }: MountProps) => {\n//   const portalRef = React.createRef<HTMLDivElement>();\n//   useEffect(() => {\n//     if (portalRef.current) {\n//       mount(portalRef.current, props);\n//     }\n//     return () => {\n//       if (portalRef.current) {\n//         unmount(portalRef.current);\n//       }\n//     };\n//   }, []);\n//   return <div ref={portalRef} />;\n// });\n// Portal.displayName = 'ClerkPortal';\n\n\nclass Portal extends react_1.default.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.portalRef = react_1.default.createRef();\n  }\n\n  componentDidMount() {\n    if (this.portalRef.current) {\n      this.props.mount(this.portalRef.current, this.props.props);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.portalRef.current) {\n      this.props.unmount(this.portalRef.current);\n    }\n  }\n\n  render() {\n    return react_1.default.createElement(\"div\", {\n      ref: this.portalRef\n    });\n  }\n\n}\n\nexports.SignIn = (0, contexts_1.withClerk)(_a => {\n  var {\n    clerk\n  } = _a,\n      props = (0, tslib_1.__rest)(_a, [\"clerk\"]);\n  return react_1.default.createElement(Portal, {\n    mount: clerk.mountSignIn,\n    unmount: clerk.unmountSignIn,\n    props: props\n  });\n}, 'SignIn');\nexports.SignUp = (0, contexts_1.withClerk)(_a => {\n  var {\n    clerk\n  } = _a,\n      props = (0, tslib_1.__rest)(_a, [\"clerk\"]);\n  return react_1.default.createElement(Portal, {\n    mount: clerk.mountSignUp,\n    unmount: clerk.unmountSignUp,\n    props: props\n  });\n}, 'SignUp');\nexports.UserProfile = (0, contexts_1.withClerk)(_a => {\n  var {\n    clerk\n  } = _a,\n      props = (0, tslib_1.__rest)(_a, [\"clerk\"]);\n  return react_1.default.createElement(Portal, {\n    mount: clerk.mountUserProfile,\n    unmount: clerk.unmountUserProfile,\n    props: props\n  });\n}, 'UserProfile');\nexports.UserButton = (0, contexts_1.withClerk)(_a => {\n  var {\n    clerk\n  } = _a,\n      props = (0, tslib_1.__rest)(_a, [\"clerk\"]);\n  return react_1.default.createElement(Portal, {\n    mount: clerk.mountUserButton,\n    unmount: clerk.unmountUserButton,\n    props: props\n  });\n}, 'UserButton');","map":{"version":3,"mappings":";;;;;;;;;AAMA;;AAEA,0C,CAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,MAAMA,MAAN,SAAqBC,gBAAMC,aAA3B,CAAwD;AAAxDC;;AACU,qBAAYF,gBAAMG,SAAN,EAAZ;AAiBT;;AAfCC,mBAAiB;AACf,QAAI,KAAKC,SAAL,CAAeC,OAAnB,EAA4B;AAC1B,WAAKC,KAAL,CAAWC,KAAX,CAAiB,KAAKH,SAAL,CAAeC,OAAhC,EAAyC,KAAKC,KAAL,CAAWA,KAApD;AACD;AACF;;AAEDE,sBAAoB;AAClB,QAAI,KAAKJ,SAAL,CAAeC,OAAnB,EAA4B;AAC1B,WAAKC,KAAL,CAAWG,OAAX,CAAmB,KAAKL,SAAL,CAAeC,OAAlC;AACD;AACF;;AAEDK,QAAM;AACJ,WAAOX;AAAKY,SAAG,EAAE,KAAKP;AAAf,MAAP;AACD;;AAjBqD;;AAoB3CQ,iBAAS,0BACnBC,EAAD,IAAoD;MAAnD;AAAEC;AAAF,MAAOD;MAAKP,KAAK,2BAAjB,SAAiB;AAChB,SACEP,8BAACD,MAAD,EAAO;AACLS,SAAK,EAAEO,KAAK,CAACC,WADR;AAELN,WAAO,EAAEK,KAAK,CAACE,aAFV;AAGLV,SAAK,EAAEA;AAHF,GAAP,CADF;AAOD,CATmB,EAUpB,QAVoB,CAAT;AAaAM,iBAAS,0BACnBC,EAAD,IAAoD;MAAnD;AAAEC;AAAF,MAAOD;MAAKP,KAAK,2BAAjB,SAAiB;AAChB,SACEP,8BAACD,MAAD,EAAO;AACLS,SAAK,EAAEO,KAAK,CAACG,WADR;AAELR,WAAO,EAAEK,KAAK,CAACI,aAFV;AAGLZ,SAAK,EAAEA;AAHF,GAAP,CADF;AAOD,CATmB,EAUpB,QAVoB,CAAT;AAaAM,sBAAc,0BACxBC,EAAD,IAAyD;MAAxD;AAAEC;AAAF,MAAOD;MAAKP,KAAK,2BAAjB,SAAiB;AAChB,SACEP,8BAACD,MAAD,EAAO;AACLS,SAAK,EAAEO,KAAK,CAACK,gBADR;AAELV,WAAO,EAAEK,KAAK,CAACM,kBAFV;AAGLd,SAAK,EAAEA;AAHF,GAAP,CADF;AAOD,CATwB,EAUzB,aAVyB,CAAd;AAaAM,qBAAa,0BACvBC,EAAD,IAAwD;MAAvD;AAAEC;AAAF,MAAOD;MAAKP,KAAK,2BAAjB,SAAiB;AAChB,SACEP,8BAACD,MAAD,EAAO;AACLS,SAAK,EAAEO,KAAK,CAACO,eADR;AAELZ,WAAO,EAAEK,KAAK,CAACQ,iBAFV;AAGLhB,SAAK,EAAEA;AAHF,GAAP,CADF;AAOD,CATuB,EAUxB,YAVwB,CAAb","names":["Portal","react_1","PureComponent","constructor","createRef","componentDidMount","portalRef","current","props","mount","componentWillUnmount","unmount","render","ref","exports","_a","clerk","mountSignIn","unmountSignIn","mountSignUp","unmountSignUp","mountUserProfile","unmountUserProfile","mountUserButton","unmountUserButton"],"sources":["/Users/johnkeane/keanelabs/shopping-list/client/node_modules/@clerk/clerk-react/src/components/uiComponents.tsx"],"sourcesContent":["import {\n  SignInProps,\n  SignUpProps,\n  UserButtonProps,\n  UserProfileProps,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { withClerk } from '../contexts';\nimport { MountProps, WithClerkProp } from '../types';\n\n// README: <Portal/> should be a class pure component in order for mount and unmount\n// lifecycle props to be invoked correctly. Replacing the class component with a\n// functional component wrapped with a React.memo is not identical to the original\n// class implementation due to React intricacies such as the useEffect’s cleanup\n// seems to run AFTER unmount, while componentWillUnmount runs BEFORE.\n\n// More information can be found at https://clerkinc.slack.com/archives/C015S0BGH8R/p1624891993016300\n\n// The function Portal implementation is commented out for future reference.\n\n// const Portal = React.memo(({ props, mount, unmount }: MountProps) => {\n//   const portalRef = React.createRef<HTMLDivElement>();\n\n//   useEffect(() => {\n//     if (portalRef.current) {\n//       mount(portalRef.current, props);\n//     }\n//     return () => {\n//       if (portalRef.current) {\n//         unmount(portalRef.current);\n//       }\n//     };\n//   }, []);\n\n//   return <div ref={portalRef} />;\n// });\n\n// Portal.displayName = 'ClerkPortal';\nclass Portal extends React.PureComponent<MountProps, {}> {\n  private portalRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    if (this.portalRef.current) {\n      this.props.mount(this.portalRef.current, this.props.props);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.portalRef.current) {\n      this.props.unmount(this.portalRef.current);\n    }\n  }\n\n  render() {\n    return <div ref={this.portalRef} />;\n  }\n}\n\nexport const SignIn = withClerk(\n  ({ clerk, ...props }: WithClerkProp<SignInProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountSignIn}\n        unmount={clerk.unmountSignIn}\n        props={props}\n      />\n    );\n  },\n  'SignIn',\n);\n\nexport const SignUp = withClerk(\n  ({ clerk, ...props }: WithClerkProp<SignUpProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountSignUp}\n        unmount={clerk.unmountSignUp}\n        props={props}\n      />\n    );\n  },\n  'SignUp',\n);\n\nexport const UserProfile = withClerk(\n  ({ clerk, ...props }: WithClerkProp<UserProfileProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountUserProfile}\n        unmount={clerk.unmountUserProfile}\n        props={props}\n      />\n    );\n  },\n  'UserProfile',\n);\n\nexport const UserButton = withClerk(\n  ({ clerk, ...props }: WithClerkProp<UserButtonProps>) => {\n    return (\n      <Portal\n        mount={clerk.mountUserButton}\n        unmount={clerk.unmountUserButton}\n        props={props}\n      />\n    );\n  },\n  'UserButton',\n);\n"]},"metadata":{},"sourceType":"script"}