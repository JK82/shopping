{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.safeExecute = exports.normalizeWithDefaultValue = exports.assertSingleChild = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\n\nconst errors_1 = require(\"../errors\");\n\nconst assertSingleChild = children => name => {\n  try {\n    return react_1.default.Children.only(children);\n  } catch (e) {\n    throw new Error((0, errors_1.multipleChildrenInButtonComponent)(name));\n  }\n};\n\nexports.assertSingleChild = assertSingleChild;\n\nconst normalizeWithDefaultValue = (children, defaultText) => {\n  if (!children) {\n    children = defaultText;\n  }\n\n  if (typeof children === 'string') {\n    children = react_1.default.createElement(\"button\", null, children);\n  }\n\n  return children;\n};\n\nexports.normalizeWithDefaultValue = normalizeWithDefaultValue;\n\nconst safeExecute = cb => function () {\n  if (cb && typeof cb === 'function') {\n    return cb(...arguments);\n  }\n};\n\nexports.safeExecute = safeExecute;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AAEA;;AAEO,MAAMA,iBAAiB,GAAIC,QAAD,IAC/BC,IAD8D,IAM5D;AACF,MAAI;AACF,WAAOC,gBAAMC,QAAN,CAAeC,IAAf,CAAoBJ,QAApB,CAAP;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,CAAU,gDAAkCL,IAAlC,CAAV,CAAN;AACD;AACF,CAZM;;AAAMM,4BAAiBR,iBAAjB;;AAcN,MAAMS,yBAAyB,GAAG,CACvCR,QADuC,EAEvCS,WAFuC,KAGrC;AACF,MAAI,CAACT,QAAL,EAAe;AACbA,YAAQ,GAAGS,WAAX;AACD;;AACD,MAAI,OAAQT,QAAR,KAA6B,QAAjC,EAA2C;AACzCA,YAAQ,GAAGE,8CAASF,QAAT,CAAX;AACD;;AACD,SAAOA,QAAP;AACD,CAXM;;AAAMO,oCAAyBC,yBAAzB;;AAaN,MAAME,WAAW,GAAIC,EAAD,IAAiB,YAAiB;AAC3D,MAAIA,EAAE,IAAI,OAAOA,EAAP,KAAc,UAAxB,EAAoC;AAClC,WAAOA,EAAE,CAAC,YAAD,CAAT;AACD;AACF,CAJM;;AAAMJ,sBAAWG,WAAX","names":["assertSingleChild","children","name","react_1","Children","only","e","Error","exports","normalizeWithDefaultValue","defaultText","safeExecute","cb"],"sources":["/Users/johnkeane/keanelabs/shopping-list/client/node_modules/@clerk/clerk-react/src/utils/childrenUtils.tsx"],"sourcesContent":["import React from 'react';\n\nimport { multipleChildrenInButtonComponent } from '../errors';\n\nexport const assertSingleChild = (children: React.ReactNode) => (\n  name:\n    | 'SignInButton'\n    | 'SignUpButton'\n    | 'SignOutButton'\n    | 'SignInWithMetamaskButton',\n) => {\n  try {\n    return React.Children.only(children);\n  } catch (e) {\n    throw new Error(multipleChildrenInButtonComponent(name));\n  }\n};\n\nexport const normalizeWithDefaultValue = (\n  children: React.ReactNode | undefined,\n  defaultText: string,\n) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof (children as any) === 'string') {\n    children = <button>{children}</button>;\n  }\n  return children;\n};\n\nexport const safeExecute = (cb: unknown) => (...args: any) => {\n  if (cb && typeof cb === 'function') {\n    return cb(...args);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}