{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClerkProvider = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst react_1 = (0, tslib_1.__importStar)(require(\"react\"));\n\nconst errors_1 = require(\"../errors\");\n\nconst isomorphicClerk_1 = (0, tslib_1.__importDefault)(require(\"../isomorphicClerk\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst ClerkContextWrapper_1 = require(\"./ClerkContextWrapper\");\n\nconst StructureContext_1 = require(\"./StructureContext\");\n\nfunction ClerkProviderBase(props) {\n  const clerk = (0, react_1.useMemo)(() => {\n    const {\n      frontendApi = '',\n      Clerk: ClerkConstructor\n    } = props,\n          rest = (0, tslib_1.__rest)(props, [\"frontendApi\", \"Clerk\"]);\n    return new isomorphicClerk_1.default(frontendApi, rest, ClerkConstructor);\n  }, []);\n  const [clerkLoaded, setClerkLoaded] = (0, react_1.useState)(false);\n  (0, react_1.useEffect)(() => {\n    void clerk.loadClerkJS().then(() => setClerkLoaded(true));\n  }, []);\n  return react_1.default.createElement(StructureContext_1.StructureContext.Provider, {\n    value: StructureContext_1.StructureContextStates.noGuarantees\n  }, clerk instanceof isomorphicClerk_1.default && clerk.ssrData && react_1.default.createElement(\"script\", {\n    type: 'application/json',\n    \"data-clerk\": 'SSR',\n    dangerouslySetInnerHTML: {\n      __html: clerk.ssrData\n    }\n  }), react_1.default.createElement(ClerkContextWrapper_1.ClerkContextWrapper, {\n    isomorphicClerk: clerk,\n    clerkLoaded: clerkLoaded\n  }, props.children));\n}\n\nconst ClerkProvider = (0, utils_1.withMaxAllowedInstancesGuard)(ClerkProviderBase, 'ClerkProvider', errors_1.multipleClerkProvidersError);\nexports.ClerkProvider = ClerkProvider;\nClerkProvider.displayName = 'ClerkProvider';","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AAOA,SAASA,iBAAT,CAA2BC,KAA3B,EAA6E;AAC3E,QAAMC,KAAK,GAAG,qBAAQ,MAAK;AACzB,UAAM;AAAEC,iBAAW,GAAG,EAAhB;AAAoBC,WAAK,EAAEC;AAA3B,QAAyDJ,KAA/D;AAAA,UAAsDK,IAAI,uBAAKL,KAAL,EAApD,wBAAoD,CAA1D;AACA,WAAO,IAAIM,yBAAJ,CAAoBJ,WAApB,EAAiCG,IAAjC,EAAuCD,gBAAvC,CAAP;AACD,GAHa,EAGX,EAHW,CAAd;AAKA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgC,sBAAS,KAAT,CAAtC;AAEA,yBAAU,MAAK;AACb,SAAKP,KAAK,CAACQ,WAAN,GAAoBC,IAApB,CAAyB,MAAMF,cAAc,CAAC,IAAD,CAA7C,CAAL;AACD,GAFD,EAEG,EAFH;AAIA,SACEG,8BAACC,oCAAiBC,QAAlB,EAA0B;AAACC,SAAK,EAAEF,0CAAuBG;AAA/B,GAA1B,EACGd,KAAK,YAAYK,yBAAjB,IAAoCL,KAAK,CAACe,OAA1C,IACCL;AACEM,QAAI,EAAC,kBADP;AACyB,kBACZ,KAFb;AAGEC,2BAAuB,EAAE;AAAEC,YAAM,EAAElB,KAAK,CAACe;AAAhB;AAH3B,IAFJ,EAQEL,8BAACS,yCAAD,EAAoB;AAACC,mBAAe,EAAEpB,KAAlB;AAAyBM,eAAW,EAAEA;AAAtC,GAApB,EACGP,KAAK,CAACsB,QADT,CARF,CADF;AAcD;;AAED,MAAMC,aAAa,GAAG,0CACpBxB,iBADoB,EAEpB,eAFoB,EAGpByB,oCAHoB,CAAtB;AAQSC;AAFTF,aAAa,CAACG,WAAd,GAA4B,eAA5B","names":["ClerkProviderBase","props","clerk","frontendApi","Clerk","ClerkConstructor","rest","isomorphicClerk_1","clerkLoaded","setClerkLoaded","loadClerkJS","then","react_1","StructureContext_1","Provider","value","noGuarantees","ssrData","type","dangerouslySetInnerHTML","__html","ClerkContextWrapper_1","isomorphicClerk","children","ClerkProvider","errors_1","exports","displayName"],"sources":["/Users/johnkeane/keanelabs/shopping-list/client/node_modules/@clerk/clerk-react/src/contexts/ClerkProvider.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\n\nimport { multipleClerkProvidersError } from '../errors';\nimport IsomorphicClerk from '../isomorphicClerk';\nimport type { ClerkProp, IsomorphicClerkOptions } from '../types';\nimport { withMaxAllowedInstancesGuard } from '../utils';\nimport { ClerkContextWrapper } from './ClerkContextWrapper';\nimport { StructureContext, StructureContextStates } from './StructureContext';\n\nexport interface ClerkProviderProps extends IsomorphicClerkOptions {\n  frontendApi?: string;\n  Clerk?: ClerkProp;\n}\n\nfunction ClerkProviderBase(props: React.PropsWithChildren<ClerkProviderProps>) {\n  const clerk = useMemo(() => {\n    const { frontendApi = '', Clerk: ClerkConstructor, ...rest } = props;\n    return new IsomorphicClerk(frontendApi, rest, ClerkConstructor);\n  }, []);\n\n  const [clerkLoaded, setClerkLoaded] = useState(false);\n\n  useEffect(() => {\n    void clerk.loadClerkJS().then(() => setClerkLoaded(true));\n  }, []);\n\n  return (\n    <StructureContext.Provider value={StructureContextStates.noGuarantees}>\n      {clerk instanceof IsomorphicClerk && clerk.ssrData && (\n        <script\n          type='application/json'\n          data-clerk='SSR'\n          dangerouslySetInnerHTML={{ __html: clerk.ssrData }}\n        />\n      )}\n      <ClerkContextWrapper isomorphicClerk={clerk} clerkLoaded={clerkLoaded}>\n        {props.children}\n      </ClerkContextWrapper>\n    </StructureContext.Provider>\n  );\n}\n\nconst ClerkProvider = withMaxAllowedInstancesGuard(\n  ClerkProviderBase,\n  'ClerkProvider',\n  multipleClerkProvidersError,\n);\n\nClerkProvider.displayName = 'ClerkProvider';\n\nexport { ClerkProvider };\n"]},"metadata":{},"sourceType":"script"}