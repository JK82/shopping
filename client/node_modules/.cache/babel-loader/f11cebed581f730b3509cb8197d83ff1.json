{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WithUser = exports.withUser = exports.useUser = exports.useUserContext = exports.UserContext = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst react_1 = (0, tslib_1.__importStar)(require(\"react\"));\n\nconst StructureContext_1 = require(\"../contexts/StructureContext\");\n\nconst errors_1 = require(\"../errors\");\n\nconst utils_1 = require(\"../utils\");\n\nconst assertHelpers_1 = require(\"./assertHelpers\");\n\nexports.UserContext = react_1.default.createContext(undefined);\nexports.UserContext.displayName = 'UserContext';\n\nfunction useUserContext() {\n  const userCtx = (0, react_1.useContext)(exports.UserContext);\n  (0, assertHelpers_1.assertWrappedByClerkProvider)(userCtx);\n  return userCtx;\n}\n\nexports.useUserContext = useUserContext;\n\nfunction useUser(options) {\n  const opts = Object.assign({}, options);\n  opts.withAssertions = opts.withAssertions || false;\n  const structureCtx = (0, react_1.useContext)(StructureContext_1.StructureContext);\n  const userCtx = useUserContext();\n\n  if (opts.withAssertions) {\n    const assertions = {\n      isLoading: user => {\n        return user === undefined;\n      },\n      isSignedOut: user => {\n        return user === null;\n      },\n      isSignedIn: user => {\n        return !!user;\n      }\n    };\n    return Object.assign({\n      user: userCtx.value\n    }, assertions);\n  }\n\n  (0, assertHelpers_1.assertWrappedByClerkProvider)(structureCtx);\n  (0, assertHelpers_1.assertUserGuarantee)(structureCtx.guaranteedUser, 'useUser()');\n  (0, assertHelpers_1.assertUserGuarantee)(userCtx.value, 'useUser()');\n  return userCtx.value;\n}\n\nexports.useUser = useUser;\n\nconst withUser = (Component, displayName) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n\n  const HOC = props => {\n    const structureCtx = (0, react_1.useContext)(StructureContext_1.StructureContext);\n    const userCtx = (0, react_1.useContext)(exports.UserContext);\n\n    if (!(0, utils_1.inBrowser)()) {\n      return null;\n    }\n\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(structureCtx);\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(userCtx);\n    const user = userCtx.value;\n\n    if (structureCtx.guaranteedUser && user) {\n      return react_1.default.createElement(Component, Object.assign({}, props, {\n        user: user\n      }));\n    }\n\n    if (user) {\n      return react_1.default.createElement(StructureContext_1.StructureContext.Provider, {\n        value: StructureContext_1.StructureContextStates.guaranteedAll\n      }, react_1.default.createElement(Component, Object.assign({}, props, {\n        user: user\n      })));\n    }\n\n    return null;\n  };\n\n  HOC.displayName = `withUser(${displayName})`;\n  return HOC;\n};\n\nexports.withUser = withUser;\n\nconst WithUser = _ref => {\n  let {\n    children\n  } = _ref;\n  return react_1.default.createElement(StructureContext_1.StructureContext.Consumer, null, structureCtx => react_1.default.createElement(exports.UserContext.Consumer, null, userCtx => {\n    if (typeof children !== 'function') {\n      throw new Error(errors_1.hocChildrenNotAFunctionError);\n    }\n\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(structureCtx);\n    (0, assertHelpers_1.assertWrappedByClerkProvider)(userCtx);\n    const user = userCtx.value;\n\n    if (structureCtx.guaranteedUser && user) {\n      return children(user);\n    }\n\n    if (user) {\n      return react_1.default.createElement(StructureContext_1.StructureContext.Provider, {\n        value: StructureContext_1.StructureContextStates.guaranteedAll\n      }, children(user));\n    }\n\n    return null;\n  }));\n};\n\nexports.WithUser = WithUser;","map":{"version":3,"mappings":"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","names":["exports","react_1","createContext","undefined","displayName","useUserContext","userCtx","useUser","options","opts","withAssertions","structureCtx","StructureContext_1","assertions","isLoading","user","isSignedOut","isSignedIn","value","guaranteedUser","withUser","Component","name","HOC","props","Object","Provider","guaranteedAll","WithUser","children","Consumer","Error","errors_1"],"sources":["/Users/johnkeane/keanelabs/shopping-list/client/node_modules/@clerk/clerk-react/src/contexts/UserContext.tsx"],"sourcesContent":["import { UserResource } from '@clerk/types';\nimport React, { useContext } from 'react';\n\nimport {\n  StructureContext,\n  StructureContextStates,\n} from '../contexts/StructureContext';\nimport { hocChildrenNotAFunctionError } from '../errors';\nimport { inBrowser } from '../utils';\nimport {\n  assertUserGuarantee,\n  assertWrappedByClerkProvider,\n} from './assertHelpers';\n\ntype UserTypes = UserResource | null | undefined;\ntype UserContextValue = { value: UserTypes };\nexport const UserContext = React.createContext<UserContextValue | undefined>(\n  undefined,\n);\nUserContext.displayName = 'UserContext';\n\nexport function useUserContext(): UserContextValue {\n  const userCtx = useContext(UserContext);\n  assertWrappedByClerkProvider(userCtx);\n  return userCtx;\n}\n\ntype UseUserWithAssertionsResponse = {\n  user: UserTypes;\n  isLoading: (user: UserTypes) => user is undefined;\n  isSignedOut: (user: UserTypes) => user is null;\n  isSignedIn: (user: UserTypes) => user is UserResource;\n};\n\nexport function useUser(options?: { withAssertions: false }): UserResource;\nexport function useUser(options: {\n  withAssertions: true;\n}): UseUserWithAssertionsResponse;\nexport function useUser(options?: {\n  withAssertions: boolean;\n}): UserResource | UseUserWithAssertionsResponse {\n  const opts = { ...options };\n  opts.withAssertions = opts.withAssertions || false;\n\n  const structureCtx = useContext(StructureContext);\n  const userCtx = useUserContext();\n\n  if (opts.withAssertions) {\n    const assertions = {\n      isLoading: (user: UserTypes): user is undefined => {\n        return user === undefined;\n      },\n      isSignedOut: (user: UserTypes): user is null => {\n        return user === null;\n      },\n      isSignedIn: (user: UserTypes): user is UserResource => {\n        return !!user;\n      },\n    };\n    return { user: userCtx.value, ...assertions };\n  }\n\n  assertWrappedByClerkProvider(structureCtx);\n  assertUserGuarantee(structureCtx.guaranteedUser, 'useUser()');\n  assertUserGuarantee(userCtx.value, 'useUser()');\n  return userCtx.value;\n}\n\nexport const withUser = <P extends { user: UserResource }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName =\n    displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n\n  const HOC: React.FC<Omit<P, 'user'>> = (props: Omit<P, 'user'>) => {\n    const structureCtx = useContext(StructureContext);\n    const userCtx = useContext(UserContext);\n    if (!inBrowser()) {\n      return null;\n    }\n    assertWrappedByClerkProvider(structureCtx);\n    assertWrappedByClerkProvider(userCtx);\n    const user = userCtx.value;\n\n    if (structureCtx.guaranteedUser && user) {\n      return <Component {...(props as P)} user={user} />;\n    }\n\n    if (user) {\n      return (\n        <StructureContext.Provider value={StructureContextStates.guaranteedAll}>\n          <Component {...(props as P)} user={user} />\n        </StructureContext.Provider>\n      );\n    }\n\n    return null;\n  };\n\n  HOC.displayName = `withUser(${displayName})`;\n  return HOC;\n};\n\nexport const WithUser: React.FC<{\n  children: (user: UserResource) => React.ReactNode;\n}> = ({ children }) => (\n  <StructureContext.Consumer>\n    {structureCtx => (\n      <UserContext.Consumer>\n        {userCtx => {\n          if (typeof children !== 'function') {\n            throw new Error(hocChildrenNotAFunctionError);\n          }\n\n          assertWrappedByClerkProvider(structureCtx);\n          assertWrappedByClerkProvider(userCtx);\n          const user = userCtx.value;\n\n          if (structureCtx.guaranteedUser && user) {\n            return children(user);\n          }\n\n          if (user) {\n            return (\n              <StructureContext.Provider\n                value={StructureContextStates.guaranteedAll}\n              >\n                {children(user)}\n              </StructureContext.Provider>\n            );\n          }\n\n          return null;\n        }}\n      </UserContext.Consumer>\n    )}\n  </StructureContext.Consumer>\n);\n"]},"metadata":{},"sourceType":"script"}