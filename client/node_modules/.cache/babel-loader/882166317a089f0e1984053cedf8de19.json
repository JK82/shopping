{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMagicLinkError = exports.MagicLinkErrorCode = exports.multipleChildrenInButtonComponent = exports.hocChildrenNotAFunctionError = exports.multipleClerkProvidersError = exports.noGuaranteedUserError = exports.noGuaranteedLoadedError = exports.noClerkProviderError = exports.noFrontendApiError = void 0;\nexports.noFrontendApiError = 'Clerk: You must add the frontendApi prop to your <ClerkProvider>';\nexports.noClerkProviderError = 'Clerk: You must wrap your application in a <ClerkProvider> component.';\n\nconst noGuaranteedLoadedError = hookName => `Clerk: You're calling ${hookName} before there's a guarantee the client has been loaded. Call ${hookName} from a child of <SignedIn>, <SignedOut>, or <ClerkLoaded>, or use the withClerk() HOC.`;\n\nexports.noGuaranteedLoadedError = noGuaranteedLoadedError;\n\nconst noGuaranteedUserError = hookName => `Clerk: You're calling ${hookName} before there's a guarantee there's an active user. Call ${hookName} from a child of <SignedIn> or use the withUser() HOC.`;\n\nexports.noGuaranteedUserError = noGuaranteedUserError;\nexports.multipleClerkProvidersError = \"Clerk: You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\nexports.hocChildrenNotAFunctionError = 'Clerk: Child of WithClerk must be a function.';\n\nconst multipleChildrenInButtonComponent = name => `Clerk: You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\n\nexports.multipleChildrenInButtonComponent = multipleChildrenInButtonComponent;\nexports.MagicLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed'\n};\n\nfunction isMagicLinkError(err) {\n  return !!err && (err.code === exports.MagicLinkErrorCode.Expired || err.code === exports.MagicLinkErrorCode.Failed);\n}\n\nexports.isMagicLinkError = isMagicLinkError;","map":{"version":3,"mappings":";;;;;;AAAaA,6BACX,kEADW;AAGAA,+BACX,uEADW;;AAGN,MAAMC,uBAAuB,GAAIC,QAAD,IACrC,yBAAyBA,QAAQ,gEAAgEA,QAAQ,yFADpG;;AAAMF,kCAAuBC,uBAAvB;;AAGN,MAAME,qBAAqB,GAAID,QAAD,IACnC,yBAAyBA,QAAQ,4DAA4DA,QAAQ,wDADhG;;AAAMF,gCAAqBG,qBAArB;AAGAH,sCACX,yIADW;AAGAA,uCACX,+CADW;;AAGN,MAAMI,iCAAiC,GAAIC,IAAD,IAC/C,yDAAyDA,IAAI,yDADxD;;AAAML,4CAAiCI,iCAAjC;AAGAJ,6BAAqB;AAChCM,SAAO,EAAE,SADuB;AAEhCC,QAAM,EAAE;AAFwB,CAArB;;AASb,SAAgBC,gBAAhB,CAAiCC,GAAjC,EAAyC;AACvC,SACE,CAAC,CAACA,GAAF,KACCA,GAAG,CAACC,IAAJ,KAAaV,2BAAmBM,OAAhC,IACCG,GAAG,CAACC,IAAJ,KAAaV,2BAAmBO,MAFlC,CADF;AAKD;;AANDP","names":["exports","noGuaranteedLoadedError","hookName","noGuaranteedUserError","multipleChildrenInButtonComponent","name","Expired","Failed","isMagicLinkError","err","code"],"sources":["/Users/johnkeane/keanelabs/shopping-list/client/node_modules/@clerk/clerk-react/src/errors.ts"],"sourcesContent":["export const noFrontendApiError =\n  'Clerk: You must add the frontendApi prop to your <ClerkProvider>';\n\nexport const noClerkProviderError =\n  'Clerk: You must wrap your application in a <ClerkProvider> component.';\n\nexport const noGuaranteedLoadedError = (hookName: string) =>\n  `Clerk: You're calling ${hookName} before there's a guarantee the client has been loaded. Call ${hookName} from a child of <SignedIn>, <SignedOut>, or <ClerkLoaded>, or use the withClerk() HOC.`;\n\nexport const noGuaranteedUserError = (hookName: string) =>\n  `Clerk: You're calling ${hookName} before there's a guarantee there's an active user. Call ${hookName} from a child of <SignedIn> or use the withUser() HOC.`;\n\nexport const multipleClerkProvidersError =\n  \"Clerk: You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\n\nexport const hocChildrenNotAFunctionError =\n  'Clerk: Child of WithClerk must be a function.';\n\nexport const multipleChildrenInButtonComponent = (name: string) =>\n  `Clerk: You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\n\nexport const MagicLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed',\n};\n\ntype MagicLinkError = {\n  code: 'expired' | 'failed';\n};\n\nexport function isMagicLinkError(err: any): err is MagicLinkError {\n  return (\n    !!err &&\n    (err.code === MagicLinkErrorCode.Expired ||\n      err.code === MagicLinkErrorCode.Failed)\n  );\n}\n"]},"metadata":{},"sourceType":"script"}