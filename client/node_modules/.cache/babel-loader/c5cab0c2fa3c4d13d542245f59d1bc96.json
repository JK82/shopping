{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useMagicLink = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\n\nfunction useMagicLink(resource) {\n  const {\n    startMagicLinkFlow,\n    cancelMagicLinkFlow\n  } = react_1.default.useMemo(() => resource.createMagicLinkFlow(), [resource]);\n  react_1.default.useEffect(() => {\n    return cancelMagicLinkFlow;\n  }, []);\n  return {\n    startMagicLinkFlow,\n    cancelMagicLinkFlow\n  };\n}\n\nexports.useMagicLink = useMagicLink;","map":{"version":3,"mappings":";;;;;;;;;AAQA;;AAqBA,SAASA,YAAT,CACEC,QADF,EACyB;AAKvB,QAAM;AAAEC,sBAAF;AAAsBC;AAAtB,MAA8CC,gBAAMC,OAAN,CAClD,MAAMJ,QAAQ,CAACK,mBAAT,EAD4C,EAElD,CAACL,QAAD,CAFkD,CAApD;AAKAG,kBAAMG,SAAN,CAAgB,MAAK;AACnB,WAAOJ,mBAAP;AACD,GAFD,EAEG,EAFH;AAIA,SAAO;AACLD,sBADK;AAELC;AAFK,GAAP;AAOD;;AAEQK","names":["useMagicLink","resource","startMagicLinkFlow","cancelMagicLinkFlow","react_1","useMemo","createMagicLinkFlow","useEffect","exports"],"sources":["/Users/johnkeane/keanelabs/shopping-list/client/node_modules/@clerk/clerk-react/src/useMagicLink.ts"],"sourcesContent":["import {\n  CreateMagicLinkFlowReturn,\n  EmailAddressResource,\n  SignInResource,\n  SignInStartMagicLinkFlowParams,\n  SignUpResource,\n  StartMagicLinkFlowParams,\n} from '@clerk/types';\nimport React from 'react';\n\ntype MagicLinkable = SignUpResource | EmailAddressResource | SignInResource;\ntype UseMagicLinkSignInReturn = CreateMagicLinkFlowReturn<\n  SignInStartMagicLinkFlowParams,\n  SignInResource\n>;\ntype UseMagicLinkSignUpReturn = CreateMagicLinkFlowReturn<\n  StartMagicLinkFlowParams,\n  SignUpResource\n>;\ntype UseMagicLinkEmailAddressReturn = CreateMagicLinkFlowReturn<\n  StartMagicLinkFlowParams,\n  EmailAddressResource\n>;\n\nfunction useMagicLink(resource: SignInResource): UseMagicLinkSignInReturn;\nfunction useMagicLink(resource: SignUpResource): UseMagicLinkSignUpReturn;\nfunction useMagicLink(\n  resource: EmailAddressResource,\n): UseMagicLinkEmailAddressReturn;\nfunction useMagicLink(\n  resource: MagicLinkable,\n):\n  | UseMagicLinkSignInReturn\n  | UseMagicLinkSignUpReturn\n  | UseMagicLinkEmailAddressReturn {\n  const { startMagicLinkFlow, cancelMagicLinkFlow } = React.useMemo(\n    () => resource.createMagicLinkFlow(),\n    [resource],\n  );\n  \n  React.useEffect(() => {\n    return cancelMagicLinkFlow;\n  }, []);\n\n  return {\n    startMagicLinkFlow,\n    cancelMagicLinkFlow,\n  } as\n    | UseMagicLinkSignInReturn\n    | UseMagicLinkSignUpReturn\n    | UseMagicLinkEmailAddressReturn;\n}\n\nexport { useMagicLink };\n"]},"metadata":{},"sourceType":"script"}